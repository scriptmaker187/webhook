local players = game:GetService("Players")
local replicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = players.LocalPlayer

-- Sicherstellen, dass Events existieren
local carryEvent = replicatedStorage:FindFirstChild("Events") and replicatedStorage.Events:FindFirstChild("CarryEvent")
local teleportEvent = replicatedStorage:FindFirstChild("Events") and replicatedStorage.Events:FindFirstChild("TeleportEvent")

function waitForCharacterInWorkspace(player)
    while not player.Character or not player.Character.Parent do
        task.wait()
    end
end

local function processTargetPlayer(targetPlayerName)
    if not targetPlayerName or targetPlayerName == "" then
        warn("Target player name is not set!")
        return
    end
    
    waitForCharacterInWorkspace(localPlayer)
    
    local targetPlayer = nil
    for _, player in ipairs(players:GetPlayers()) do
        if string.lower(player.Name):sub(1, #targetPlayerName) == string.lower(targetPlayerName) then
            targetPlayer = player
            break
        end
    end
    
    if targetPlayer and targetPlayer ~= localPlayer then
        local targetCharacter = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
        if targetCharacter then
            local localCharacter = localPlayer.Character
            local initialPosition = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart") and localCharacter.HumanoidRootPart.CFrame
            local humanoid = localCharacter and localCharacter:FindFirstChildOfClass("Humanoid")
            
            local targetPosition = targetCharacter:FindFirstChild("HumanoidRootPart")
            local localRootPart = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart")
            
            if targetPosition and localRootPart then
                localRootPart.CFrame = targetPosition.CFrame
                task.wait(0.254)
            end
            
            if carryEvent then
                pcall(function()
                    carryEvent:FireServer(targetPlayer, "request_accepted")
                end)
            end
            
            local fireballSkill = replicatedStorage:FindFirstChild("SkillsInRS") and replicatedStorage.SkillsInRS.Parts:FindFirstChild("Fireball")
            if fireballSkill then
                pcall(function()
                    teleportEvent:FireServer(fireballSkill)
                end)
            else
                warn("Fireball skill not found!")
            end
            
            task.wait(0.245)
            
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                task.wait(0.3)
            end
            
            if initialPosition and localRootPart then
                localRootPart.CFrame = initialPosition
            end
        end
    end
end

local function processAllPlayers()
    waitForCharacterInWorkspace(localPlayer)
    local localCharacter = localPlayer.Character
    local initialPosition = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart") and localCharacter.HumanoidRootPart.CFrame
    local humanoid = localCharacter and localCharacter:FindFirstChildOfClass("Humanoid")
    
    for _, targetPlayer in ipairs(players:GetPlayers()) do
        if targetPlayer ~= localPlayer then
            local targetCharacter = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
            if targetCharacter then
                local targetPosition = targetCharacter:FindFirstChild("HumanoidRootPart")
                local localRootPart = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart")
                
                if targetPosition and localRootPart then
                    localRootPart.CFrame = targetPosition.CFrame
                    task.wait(0.2)
                end
                
                if carryEvent then
                    pcall(function()
                        carryEvent:FireServer(targetPlayer, "request_accepted")
                    end)
                end
                
                local fireballSkill = replicatedStorage:FindFirstChild("SkillsInRS") and replicatedStorage.SkillsInRS.Parts:FindFirstChild("Fireball")
                if fireballSkill then
                    pcall(function()
                        teleportEvent:FireServer(fireballSkill)
                    end)
                else
                    warn("Fireball skill not found!")
                end
                
                task.wait(0.2)
                
                if humanoid then
                    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                    task.wait(0.2)
                end
                
                if initialPosition and localRootPart then
                    localRootPart.CFrame = initialPosition
                end
            end
        end
    end
end

return {
    processTargetPlayer = processTargetPlayer,
    processAllPlayers = processAllPlayers
}
